version: "3.7"

services:
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: 'python manage.py runserver 0.0.0.0:8000'
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db_admin
    networks:
      microservices-network-docker: 
        ipv4_address: "10.10.0.50"

  db_admin:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db_admin'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3301:3306'
    expose:
      # Opens port 3306 on the container
      - '3301'
      # Where our data will be persisted
    networks:
      microservices-network-docker: 
        ipv4_address: "10.10.0.51"
    volumes:
      - my-db-mysql:/var/lib/mysql
# Names our volume
volumes:
  my-db-mysql: null
networks:
  microservices-network-docker:
    external:
      name: microservices-network-docker
    # Command to create a docker network
    # docker network create \--subnet=172.18.0.0/16\ microservices-network-docker
    # docker network create microservices-network-docker --subnet=172.18.0.0/16 
